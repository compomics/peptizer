<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.compomics</groupId>
    <artifactId>peptizer</artifactId>
    <packaging>jar</packaging>
    <version>${version.number}</version>
    <name>Peptizer</name>
    <url>http://peptizer.googlecode.com</url>

    <!-- Set the version number for the whole project -->
    <properties>
        <version.number>1.7.1</version.number>
        <logging.level.default>DEBUG</logging.level.default>
        <logging.file.path.name>peptizer-log4j.log</logging.file.path.name>
        <logging.file.max.size>5000KB</logging.file.max.size>
        <logging.pattern>[%d{dd-MMM-yyyy HH:mm:ss} - %p] "%m" (%C:%L)%n</logging.pattern>
    </properties>

    <!-- Licence -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!-- Build -->
    <build>
        <!-- Copy the resources required during building -->
        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <includes>
                    <include>test.txt</include>
                </includes>
            </resource>
        </resources>


        <!-- Plugins -->
        <plugins>
            <!-- Compiler plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <showDeprecation>true</showDeprecation>
                    <debug>true</debug>
                </configuration>
            </plugin>

            <!-- Jar plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <mainClass>com.compomics.peptizer.PeptizerStarter</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib</classpathPrefix>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.build.directory}/peptizer-${project.version}</outputDirectory>
                </configuration>
            </plugin>

            <!-- Dependency plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/peptizer-${project.version}/lib
                            </outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <excludeTransitive>false</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Resources plugin -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <!-- Copy main resources to test resources before testing. Peptizer config files! -->
                    <execution>
                        <id>copy-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>src/test/resources/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy main resources to target folder before package! -->
                    <execution>
                        <id>copy-package-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>target/peptizer-${version.number}/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf</directory>
                                    <includes>
                                        <include>*.xml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copies the properties files during compilation.-->
                    <execution>
                        <id>copy-compile-properties-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf</directory>
                                    <includes>
                                        <include>peptizer.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copies the log4j properties during compilation. -->
                    <execution>
                        <id>copy-compile-log4j-properties-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>

                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf</directory>
                                    <includes>
                                        <include>log4j.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>

                    </execution>


                    <!-- Copies the configuration files during compilation.-->
                    <execution>
                        <id>copy-compile-configuration-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf</directory>
                                    <includes>
                                        <include>agent.xml</include>
                                        <include>agent_complete.xml</include>
                                        <include>aggregator.xml</include>
                                        <include>general.xml</include>
                                        <include>table.xml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copies the image files during compilation.-->
                    <execution>
                        <id>copy-compile-image-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/image</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/image</directory>
                                    <includes>
                                        <include>*.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Create javadoc on build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.6.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Pack sources on build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- Repositores -->
    <repositories>
        <!-- UGent Genesis Maven 1 repository -->
        <repository>
            <id>genesis-maven-repository</id>
            <name>Genesis maven1 repository</name>
            <url>http://genesis.UGent.be/maven</url>
            <layout>legacy</layout>
        </repository>

        <!-- UGent Genesis Maven 2 repository -->
        <repository>
            <id>genesis-maven2-repository</id>
            <name>Genesis maven2 repository</name>
            <url>http://genesis.UGent.be/maven2</url>
            <layout>default</layout>
        </repository>


        <!-- UGent Genesis Maven 2 repository -->
        <repository>
            <id>ebi-repository</id>
            <name>EBI maven2 repository</name>
            <url>http://www.ebi.ac.uk/~maven/m2repo/</url>
            <layout>default</layout>
        </repository>


    </repositories>

    <!-- Dependencies -->
    <dependencies>

        <dependency>
            <groupId>uk.ac.ebi.uniprot.kraken</groupId>
            <artifactId>uniprotjapi</artifactId>
            <version>2010.07</version>
        </dependency>

        <!-- This project depends on the junit JAR file.
          -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- This project depends on the JAR file "lmjunit-1.0.2.jar" (TestCaseLM)
                  the remote repository root of which is 'http://genesis.UGent.be/maven'.
                  -->
        <dependency>
            <groupId>lennart</groupId>
            <artifactId>lmjunit</artifactId>
            <version>1.0.2</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the MascotDatfile library.
                            -->
        <dependency>
            <groupId>com.compomics</groupId>
            <artifactId>mascotdatfile</artifactId>
            <version>3.2.1</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the utilities JAR file.
                  -->
        <dependency>
            <groupId>com.compomics</groupId>
            <artifactId>utilities</artifactId>
            <version>3.0.3</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the ms_lims JAR file.
        -->
        <dependency>
            <groupId>com.compomics</groupId>
            <artifactId>ms-lims</artifactId>
            <version>7.5</version>
            <type>jar</type>
        </dependency>
        <!-- This project depends on the JAR file "xpp-1.1.3.4.jar" (XmlPullParser)
                        the remote repository root of which is 'http://genesis.UGent.be/maven'.
                    -->
        <dependency>
            <groupId>xpp3</groupId>
            <artifactId>xpp3</artifactId>
            <version>1.1.3.4-RC3</version>
            <type>jar</type>
        </dependency>


        <!-- This project depends on the JFreeChart visualistations.
          -->
        <dependency>
            <groupId>jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.10</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the JCommons of JFreechart.
          -->
        <dependency>
            <groupId>jfree</groupId>
            <artifactId>jcommon</artifactId>
            <version>1.0.13</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the JCommons of JFreechart.
        -->
        <dependency>
            <groupId>de.proteinms.omxparser</groupId>
            <artifactId>omssa-parser</artifactId>
            <version>1.3.6</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>commons-math</groupId>
            <artifactId>commons-math</artifactId>
            <version>1.2</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the iText pdf library for pdf output.
        -->
        <dependency>
            <groupId>itext</groupId>
            <artifactId>iText</artifactId>
            <version>2.0.8</version>
            <type>jar</type>
        </dependency>

        <!-- This project depends on the X!Tandem parser.
        -->
        <dependency>
            <groupId>de.proteinms.xtandemparser</groupId>
            <artifactId>xtandem-parser</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>uk.ac.ebi.pride.jaxb</groupId>
            <artifactId>pride-jaxb</artifactId>
            <version>1.0.1</version>
            <type>jar</type>
        </dependency>

    </dependencies>

    <distributionManagement>
        <repository>
            <id>genesis-maven2-repo</id>
            <name>Genesis Maven Repository</name>
            <url>scp://genesis.ugent.be/home/maven/public_html/maven2</url>
        </repository>
    </distributionManagement>

</project>